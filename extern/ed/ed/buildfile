lib{ed}: {hxx ixx txx cxx}{** -version} hxx{version} $impl_libs $intf_libs

# Include the generated version header into the distribution (so that we don't
# pick up an installed one) and don't remove it when cleaning in src (so that
# clean results in a state identical to distributed).
#
hxx{version}: in{version} $src_root/manifest
{
  dist  = true
  clean = ($src_root != $out_root)
}

# Build options.
cxx.poptions =+ "-I$out_root" "-I$src_root"

obja{*}: cxx.poptions += -DLIBED_STATIC_BUILD
objs{*}: cxx.poptions += -DLIBED_SHARED_BUILD

# Export options.
lib{ed}:
{
  cxx.export.poptions = "-I$out_root" "-I$src_root"
  cxx.export.libs = $intf_libs
}

liba{hello}: cxx.export.poptions += -DLIBED_STATIC
libs{hello}: cxx.export.poptions += -DLIBED_SHARED

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  lib{ed}: bin.lib.version = @"-$version.project_id"
else
  lib{ed}: bin.lib.version = @"-$version.major.$version.minor"

# Include system wide opencv 4.4.0 headers
cxx.poptions =+ "-I/usr/local/include/opencv4"
cxx.libs =+ "-lopencv_core"
